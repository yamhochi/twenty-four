---
import type { CollectionEntry } from "astro:content";
import type { HTMLTag, Polymorphic } from "astro/types";
import FormattedDate from "../FormattedDate.astro";
import { Image } from "astro:assets";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
};

const { post, as: Tag = "div", withDesc = false } = Astro.props;
const postDate = post.data.updatedDate ?? post.data.publishDate;

---
<div class= "flex flex-row gap-x-4 items-center">
{

post.data.coverImage &&(
	<Image
		src={post.data.coverImage.src}
		alt={post.data.coverImage.alt}
		class="object-cover w-[112px] h-[125px] overflow-hidden"
		loading="eager"
		fetchpriority="high"
		width="560"
	/>)
	
}
<div class="space-y-1">
<FormattedDate date={postDate} class="min-w-[120px] text-gray-500" />
<Tag>
	<a href={`/posts/${post.slug}/`} class="cactus-link" rel="prefetch">
		{post.data.title}

	</a>
</Tag>
{withDesc && <q class="line-clamp-3 block italic">{post.data.description}</q>}
</div>
</div>
